/*
 * This source code has been generated by blanco Framework.
 */
package dapanda.api.sample.blanco

import blanco.restgenerator.util.BlancoRestGeneratorKtRequestDeserializer
import blanco.restgenerator.valueobject.CommonRequest
import blanco.restgenerator.valueobject.CommonResponse
import blanco.restgenerator.valueobject.HttpCommonRequest
import blanco.restgenerator.valueobject.RequestHeader
import blanco.restgenerator.valueobject.ResponseHeader
import dapanda.api.sample.application.SampleMethodTestManagement
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.annotation.Body
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Delete
import io.micronaut.http.annotation.Get
import io.micronaut.http.annotation.Post
import io.micronaut.http.annotation.Put
import io.micronaut.http.annotation.QueryValue

/** Methodテスト用API&lt;br&gt; */
@Controller("/sample_methods")
class SampleMethodTestController
constructor(
    /** The implementation class to be called by SampleMethodTestController. */
    var sampleMethodTestManagement: SampleMethodTestManagement
) {
  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param request Raw JSON set as queryString.
   * @return validation済みのレスポンス情報です
   */
  @Get
  fun doGet(
      argHttpRequest: HttpRequest<CommonRequest<RequestHeader, SampleMethodTestGetRequest>>,
      @QueryValue request: String
  ): HttpResponse<CommonResponse<ResponseHeader, SampleMethodTestGetResponse>> {
    /* Creates a CommonRequest instance from a JSON string. */
    val deserializer =
        BlancoRestGeneratorKtRequestDeserializer<RequestHeader, SampleMethodTestGetRequest>(
            CommonRequest::class.java)
    deserializer.infoClazz = RequestHeader::class.java
    deserializer.telegramClazz = SampleMethodTestGetRequest::class.java

    /* Creates HttpCommonRequest with httpRequest as delegator. */
    /* At this stage, commonRequest is tentative.*/
    val httpCommonRequest =
        HttpCommonRequest<CommonRequest<RequestHeader, SampleMethodTestGetRequest>>(
            argHttpRequest, true, listOf(), null)

    val commonRequest: CommonRequest<RequestHeader, SampleMethodTestGetRequest> =
        sampleMethodTestManagement.convertJsonToCommonRequest(
            request, deserializer, httpCommonRequest)

    /* Stores the commonRequest with its type determined */
    httpCommonRequest.commonRequest = commonRequest

    /* Performs preprocessing (validation, etc.) */
    sampleMethodTestManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleMethodTestManagement.doGet(httpCommonRequest)

    /* Postprocessing */
    sampleMethodTestManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }

  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param argBody Raw JSON body.
   * @return validation済みのレスポンス情報です
   */
  @Post
  fun doPost(
      argHttpRequest: HttpRequest<CommonRequest<RequestHeader, SampleMethodTestPostRequest>>,
      @Body argBody: String
  ): HttpResponse<CommonResponse<ResponseHeader, SampleMethodTestPostResponse>> {
    /* Creates a CommonRequest instance from a JSON string. */
    val deserializer =
        BlancoRestGeneratorKtRequestDeserializer<RequestHeader, SampleMethodTestPostRequest>(
            CommonRequest::class.java)
    deserializer.infoClazz = RequestHeader::class.java
    deserializer.telegramClazz = SampleMethodTestPostRequest::class.java

    /* Creates HttpCommonRequest with httpRequest as delegator. */
    /* At this stage, commonRequest is tentative.*/
    val httpCommonRequest =
        HttpCommonRequest<CommonRequest<RequestHeader, SampleMethodTestPostRequest>>(
            argHttpRequest, true, listOf(), null)

    val commonRequest: CommonRequest<RequestHeader, SampleMethodTestPostRequest> =
        sampleMethodTestManagement.convertJsonToCommonRequest(
            argBody, deserializer, httpCommonRequest)

    /* Stores the commonRequest with its type determined */
    httpCommonRequest.commonRequest = commonRequest

    /* Performs preprocessing (validation, etc.) */
    sampleMethodTestManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleMethodTestManagement.doPost(httpCommonRequest)

    /* Postprocessing */
    sampleMethodTestManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }

  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param argBody Raw JSON body.
   * @return validation済みのレスポンス情報です
   */
  @Put
  fun doPut(
      argHttpRequest: HttpRequest<CommonRequest<RequestHeader, SampleMethodTestPutRequest>>,
      @Body argBody: String
  ): HttpResponse<CommonResponse<ResponseHeader, SampleMethodTestPutResponse>> {
    /* Creates a CommonRequest instance from a JSON string. */
    val deserializer =
        BlancoRestGeneratorKtRequestDeserializer<RequestHeader, SampleMethodTestPutRequest>(
            CommonRequest::class.java)
    deserializer.infoClazz = RequestHeader::class.java
    deserializer.telegramClazz = SampleMethodTestPutRequest::class.java

    /* Creates HttpCommonRequest with httpRequest as delegator. */
    /* At this stage, commonRequest is tentative.*/
    val httpCommonRequest =
        HttpCommonRequest<CommonRequest<RequestHeader, SampleMethodTestPutRequest>>(
            argHttpRequest, true, listOf(), null)

    val commonRequest: CommonRequest<RequestHeader, SampleMethodTestPutRequest> =
        sampleMethodTestManagement.convertJsonToCommonRequest(
            argBody, deserializer, httpCommonRequest)

    /* Stores the commonRequest with its type determined */
    httpCommonRequest.commonRequest = commonRequest

    /* Performs preprocessing (validation, etc.) */
    sampleMethodTestManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleMethodTestManagement.doPut(httpCommonRequest)

    /* Postprocessing */
    sampleMethodTestManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }

  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param request Raw JSON set as queryString.
   * @return validation済みのレスポンス情報です
   */
  @Delete
  fun doDelete(
      argHttpRequest: HttpRequest<*>,
      @QueryValue request: String
  ): HttpResponse<CommonResponse<ResponseHeader, SampleMethodTestDeleteResponse>> {
    /* Creates a CommonRequest instance from a JSON string. */
    val deserializer =
        BlancoRestGeneratorKtRequestDeserializer<RequestHeader, SampleMethodTestDeleteRequest>(
            CommonRequest::class.java)
    deserializer.infoClazz = RequestHeader::class.java
    deserializer.telegramClazz = SampleMethodTestDeleteRequest::class.java

    /* Creates HttpCommonRequest with httpRequest as delegator. */
    /* At this stage, commonRequest is tentative.*/
    @Suppress("UNCHECKED_CAST")
    val httpCommonRequest =
        HttpCommonRequest<CommonRequest<RequestHeader, SampleMethodTestDeleteRequest>>(
            argHttpRequest
                as HttpRequest<CommonRequest<RequestHeader, SampleMethodTestDeleteRequest>>,
            true,
            listOf(),
            null)

    val commonRequest: CommonRequest<RequestHeader, SampleMethodTestDeleteRequest> =
        sampleMethodTestManagement.convertJsonToCommonRequest(
            request, deserializer, httpCommonRequest)

    /* Stores the commonRequest with its type determined */
    httpCommonRequest.commonRequest = commonRequest

    /* Performs preprocessing (validation, etc.) */
    sampleMethodTestManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleMethodTestManagement.doDelete(httpCommonRequest)

    /* Postprocessing */
    sampleMethodTestManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }
}
