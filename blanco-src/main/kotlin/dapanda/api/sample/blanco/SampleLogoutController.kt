/*
 * This source code has been generated by blanco Framework.
 */
package dapanda.api.sample.blanco

import blanco.restgenerator.util.BlancoRestGeneratorKtRequestDeserializer
import blanco.restgenerator.valueobject.CommonRequest
import blanco.restgenerator.valueobject.CommonResponse
import blanco.restgenerator.valueobject.HttpCommonRequest
import blanco.restgenerator.valueobject.RequestHeader
import blanco.restgenerator.valueobject.ResponseHeader
import dapanda.api.common.domain.model.authenticate.IAuthenticate
import dapanda.api.sample.application.SampleLogoutManagement
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.annotation.Body
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Put
import jakarta.inject.Named

/** ログアウトAPI&lt;br&gt; */
@Controller("/sample_logout")
class SampleLogoutController
constructor(
    /** The implementation class to be called by SampleLogoutController. */
    var sampleLogoutManagement: SampleLogoutManagement,
    @param:Named("SampleTokenAuthenticate")private val authenticate: IAuthenticate
) {
  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param argBody Raw JSON body.
   * @return validation済みのレスポンス情報です
   */
  @Put
  fun doPut(
      argHttpRequest: HttpRequest<CommonRequest<RequestHeader, SampleLogoutPutRequest>>,
      @Body argBody: String
  ): HttpResponse<CommonResponse<ResponseHeader, SampleLogoutPutResponse>> {
    /* Creates a CommonRequest instance from a JSON string. */
    val deserializer =
        BlancoRestGeneratorKtRequestDeserializer<RequestHeader, SampleLogoutPutRequest>(
            argHttpRequest.javaClass)
    deserializer.infoClazz = RequestHeader::class.java
    deserializer.telegramClazz = SampleLogoutPutRequest::class.java

    /* Creates HttpCommonRequest with httpRequest as delegator. */
    /* At this stage, commonRequest is tentative.*/
    val httpCommonRequest =
        HttpCommonRequest<CommonRequest<RequestHeader, SampleLogoutPutRequest>>(
            argHttpRequest, false, listOf(), null)

    val commonRequest: CommonRequest<RequestHeader, SampleLogoutPutRequest> =
        sampleLogoutManagement.convertJsonToCommonRequest(argBody, deserializer, httpCommonRequest)

    /* Stores the commonRequest with its type determined */
    httpCommonRequest.commonRequest = commonRequest

    /* Performs preprocessing (validation, etc.) */
    sampleLogoutManagement.prepare(httpCommonRequest, authenticate)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleLogoutManagement.doPut(httpCommonRequest)

    /* Postprocessing */
    sampleLogoutManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }
}
