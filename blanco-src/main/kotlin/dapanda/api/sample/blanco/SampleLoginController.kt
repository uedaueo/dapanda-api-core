/*
 * This source code has been generated by blanco Framework.
 */
package dapanda.api.sample.blanco

import blanco.restgenerator.valueobject.HttpCommonRequest
import dapanda.api.sample.application.SampleLoginManagement
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.annotation.Body
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Post

/** ログインAPI&lt;br&gt; */
@Controller("/sample_login")
class SampleLoginController
constructor(
    /** The implementation class to be called by SampleLoginController. */
    var sampleLoginManagement: SampleLoginManagement
) {
  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param argRequestBean bean that body json is binded to
   * @return validation済みのレスポンス情報です
   */
  @Post
  fun doPost(
      argHttpRequest: HttpRequest<SampleLoginPostRequest>,
      @Body argRequestBean: SampleLoginPostRequest
  ): HttpResponse<SampleLoginPostResponse> {
    val httpCommonRequest =
        HttpCommonRequest<dapanda.api.sample.blanco.SampleLoginPostRequest>(
            argHttpRequest, true, listOf(), null)

    /* Stores the RequestBean with its type determined */
    httpCommonRequest.commonRequest = argRequestBean

    /* Performs preprocessing (validation, etc.) */
    sampleLoginManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleLoginManagement.doPost(httpCommonRequest)

    /* Postprocessing */
    sampleLoginManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }
}
