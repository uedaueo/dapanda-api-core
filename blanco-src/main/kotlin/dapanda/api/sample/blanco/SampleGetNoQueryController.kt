/*
 * This source code has been generated by blanco Framework.
 */
package dapanda.api.sample.blanco

import blanco.restgenerator.valueobject.HttpCommonRequest
import dapanda.api.sample.application.SampleGetNoQueryManagement
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Get

/** パラメータなしGET API&lt;br&gt; */
@Controller("/sample_query")
class SampleGetNoQueryController
constructor(
    /** The implementation class to be called by SampleGetNoQueryController. */
    var sampleGetNoQueryManagement: SampleGetNoQueryManagement
) {
  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @return validation済みのレスポンス情報です
   */
  @Get
  fun doGet(argHttpRequest: HttpRequest<*>): HttpResponse<SampleGetNoQueryGetResponse> {
    val requestBean = dapanda.api.sample.blanco.SampleGetNoQueryGetRequest()

    @Suppress("UNCHECKED_CAST")
    val typedHttpRequest =
        argHttpRequest as HttpRequest<dapanda.api.sample.blanco.SampleGetNoQueryGetRequest>
    val httpCommonRequest = HttpCommonRequest(typedHttpRequest, true, listOf(), null)

    /* Stores the RequestBean with its type determined */
    httpCommonRequest.commonRequest = requestBean

    /* Performs preprocessing (validation, etc.) */
    sampleGetNoQueryManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = sampleGetNoQueryManagement.doGet(httpCommonRequest)

    /* Postprocessing */
    sampleGetNoQueryManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }
}
