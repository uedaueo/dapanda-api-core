/*
 * This source code has been generated by blanco Framework.
 */
package dapanda.api.emulator.blanco

/*
import blanco.restgenerator.valueobject.CommonRequest
import blanco.restgenerator.valueobject.CommonResponse
import blanco.restgenerator.valueobject.HttpCommonRequest
import blanco.restgenerator.valueobject.RequestHeader
import blanco.restgenerator.valueobject.ResponseHeader
import dapanda.api.emulator.application.OkManagement
import io.micronaut.http.HttpRequest
import io.micronaut.http.HttpResponse
import io.micronaut.http.annotation.Controller
import io.micronaut.http.annotation.Get
import io.micronaut.http.annotation.RequestBean

/** アプリケーションサーバへのLocation ヘッダを返すリダイレクトAPI&lt;br&gt; */
@Controller("/ok")
class OkController
constructor(
    /** The implementation class to be called by OkController. */
    var okManagement: OkManagement
) {
  /**
   * APIベースクラスから呼ばれる実行メソッドです
   *
   * @param argHttpRequest validation前のリクエスト情報です
   * @param bean get parameter set as bean.
   * @return validation済みのレスポンス情報です
   */
  @Get("/{appServer}/{groupId}/{userId}")
  fun doGet(
      argHttpRequest: HttpRequest<CommonRequest<RequestHeader, OkGetRequest>>,
      @RequestBean bean: OkGetRequest
  ): HttpResponse<CommonResponse<ResponseHeader, OkGetResponse>> {
    /* Creates HttpCommonRequest with httpRequest as delegator. */
    /* At this stage, commonRequest is tentative.*/
    val httpCommonRequest =
        HttpCommonRequest<CommonRequest<RequestHeader, OkGetRequest>>(
            argHttpRequest, true, listOf(), null)

    val info = RequestHeader()
    val commonRequest: CommonRequest<RequestHeader, OkGetRequest> = CommonRequest(info, bean)

    /* Stores the commonRequest with its type determined */
    httpCommonRequest.commonRequest = commonRequest

    /* Performs preprocessing (validation, etc.) */
    okManagement.prepare(httpCommonRequest)

    /* Passes HttpCommonRequest */
    val httpResponse = okManagement.doGet(httpCommonRequest)

    /* Postprocessing */
    okManagement.finish(httpResponse, httpCommonRequest)

    return httpResponse
  }
}


 */